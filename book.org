#+TITLE: Tabuada
#+AUTHOR: Trumae da Ilha
#+SETUPFILE: setup.config

* Introduction

* Genetic Programming 

** Individuo

#+NAME: TYPE_IND
#+HEADER: :includes <vector>
#+BEGIN_SRC cpp :results silent
using Individuo = std::vector<int>;
#+END_SRC

#+NAME: PRINTINDIVIDUO
#+BEGIN_SRC cpp :results silent 
void print(Individuo &ind) {
   std::cout << "< ";
   for(auto d : ind) 
      std::cout << d << " ";
   std::cout << ">";
}
#+END_SRC

*** Print Example

#+NAME: PRINT_EXAMPLE
#+BEGIN_SRC cpp :results silent :exports code 
Individuo ind = {1,2,3,4};

print(ind);
#+END_SRC

#+HEADER: :includes <iostream> <vector>
#+BEGIN_SRC cpp :noweb yes :exports results :main no
<<TYPE_IND>>
<<PRINTINDIVIDUO>>

int main() {
<<PRINT_EXAMPLE>>
}
#+END_SRC

#+RESULTS:
: < 1 2 3 4 >



** Populacao

#+NAME: TYPE_POP
#+BEGIN_SRC C :results silent
typedef struct structamb {
  int tam;
  double txcross;
  double txmut;
  Individuo **data;
} Populacao;
#+END_SRC


#+NAME: TYPE_STRUCTS
#+BEGIN_SRC C :results silent :exports none :tangle yes :noweb yes :main no
<<TYPE_IND>>
<<TYPE_POP>>
#+END_SRC





#+header: :var mystring="Sunday" :var myint=145 :var mydouble=3.14
#+BEGIN_SRC C :exports both
  printf ("mystring %s\n", mystring);
  printf ("myint    %d\n", myint);
  printf ("mydouble %g\n", mydouble);
#+END_SRC

#+RESULTS:
| mystring | Sunday |
| myint    |    145 |
| mydouble |   3.14 |


#+header: :var mystring="Sunday" :var myint=145 :var mydouble=3.14
#+BEGIN_SRC C
  printf ("mystring %s\n", mystring);
  printf ("myint    %d\n", myint);
#+END_SRC

#+RESULTS:
| mystring | Sunday |
| myint    |    145 |



* All together


